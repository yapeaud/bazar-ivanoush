.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "TASK\-CLEAN" "7" "April 2013" "" ""
.
.SH "NAME"
\fBtask\-clean\fR \- clean task(s) for bake(1)
.
.SH "SYNOPSIS"
Clean task(s) for bake(1)\.
.
.SH "DESCRIPTION"
Removes the \fBtarget\fR directory\.
.
.P
The \fBtarget\fR directory is the staging directory used by bake(1) tasks\.
.
.SH "REQUIRE"
You do not need to require(3) this task as it is a builtin task\.
.
.SH "USAGE"
.
.nf

bake clean [options\|\.\|\.\|\.]
.
.fi
.
.SH "OPTIONS"
.
.TP
\fB\-v | \-\-verbose\fR:

.
.P
Print files as they are deleted\.
.
.SH "INTERACTIVE"
The clean task is interactive provided that both \fIstdin\fR and \fIstdout\fR are a \fItty\fR\. You can bypass interactivity by piping to \fIstdin\fR or redirecting \fIstdout\fR:
.
.IP "" 4
.
.nf

echo "" | bake clean
bake clean > clean\.log
.
.fi
.
.IP "" 0
.
.SH "BUGS"
\fBtask\-clean\fR is written in bash and depends upon \fBbash\fR >= 4\.2\.
.
.SH "COPYRIGHT"
\fBtask\-clean\fR is copyright (c) 2012 muji \fIhttp://xpm\.io\fR
.
.SH "SEE ALSO"
bake(1)
